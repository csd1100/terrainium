# This file is auto-generated by terrainium
# DO NOT EDIT MANUALLY USE `terrainium edit` COMMAND TO EDIT TOML

# USER DEFINED ALIASES: START
{{> aliases this.merged.aliases }}
# USER DEFINED ALIASES: END
# USER DEFINED ENVS: START
{{> envs this.merged.envs }}
# USER DEFINED ENVS: END

function __terrainium_unset_envs() {
{{> unenvs this.merged.envs }}
}

function __terrainium_unalias() {
{{> unaliases this.merged.aliases }}
}

function __terrainium_shell_constructor() {
    if [ "$TERRAIN_ENABLED" = "true" ]; then
{{> commands this.merged.constructors }}
    fi
}

function __terrainium_shell_destructor() {
    if [ "$TERRAIN_ENABLED" = "true" ]; then
{{> commands this.merged.destructors }}
    fi
}

function __terrainium_enter() {
    __terrainium_shell_constructor
}

function __terrain_prompt() {
    if [ "$TERRAIN_ENABLED" = "true" ]; then
        echo "{{ this.name }}({{ this.selected_biome }})"
    fi
}

function __terrainium_exit() {
    if [ "$TERRAIN_ENABLED" = "true" ]; then
        builtin exit
    fi
}

function __terrainium_reexport_envs() {
    typeset -x TERRAIN_ENABLED
    typeset -x TERRAIN_SESSION_ID
    typeset -x TERRAIN_SELECTED_BIOME
    typeset -x TERRAIN_AUTO_APPLY
    typeset -x TERRAIN_DIR
    typeset +x __TERRAIN_ENVS_EXPORTED="true"
}

function __terrainium_unexport_envs() {
    typeset +x TERRAIN_ENABLED
    typeset +x TERRAIN_SESSION_ID
    typeset +x TERRAIN_SELECTED_BIOME
    typeset +x TERRAIN_AUTO_APPLY
    typeset +x TERRAIN_DIR
    unset __TERRAIN_ENVS_EXPORTED
}

function __terrainium_preexec_functions() {
    if [ "$TERRAIN_ENABLED" = "true" ]; then
        local command=(${(s/ /)3})
        if [ "${command[1]}" = "terrainium" ]; then
            local is_terrainium="true"
            local verb="${command[2]}"
        elif [ "${command[1]} ${command[2]}" = "cargo run" ] && [ "$TERRAINIUM_DEV" = "true" ]; then
            local is_terrainium="true"
            local verb="${command[4]}"
        fi
        if [ "$is_terrainium" = "true" ]; then
            __terrainium_reexport_envs
            case "$verb" in
                "exit")
                    __terrainium_exit
                    ;;
                "construct")
                    __terrainium_shell_constructor
                    ;;
                "destruct")
                    __terrainium_shell_destructor
                    ;;
            esac
        fi
    fi
}

function __terrainium_precmd_functions() {
    if [ "$__TERRAIN_ENVS_EXPORTED" = "true" ]; then
        __terrainium_unexport_envs
    fi
}

function __terrainium_zshexit_functions() {
    __terrainium_reexport_envs
    __terrainium_shell_destructor
    echo "exiting terrain with session id: ${TERRAIN_SESSION_ID}"
    terrainium exit
    __terrainium_unalias
    __terrainium_unset_envs
    __terrainium_unexport_envs
}

preexec_functions=(__terrainium_preexec_functions $preexec_functions)
precmd_functions=(__terrainium_precmd_functions $precmd_functions)
zshexit_functions=(__terrainium_zshexit_functions $zshexit_functions)
